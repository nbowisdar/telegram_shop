import re

from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery, ReplyKeyboardRemove
from aiogram.filters import Text
from aiogram import F

from src.database.crud.update import update_order_status
from src.database.promo_queries import generate_new_code
from src.telegram.buttons import admin_main_kb, admin_goods_kb, admin_cancel_btn
from setup import admin_router
from setup import bot
from src.telegram.handlers.fsm_h.admin_fsm.add_promo_fsm import PromoCodeState
from src.telegram.handlers.fsm_h.admin_fsm.goods.add_goods import GoodsState
from src.telegram.handlers.fsm_h.admin_fsm.goods.update_goods import UpdateAddr


@admin_router.message(F.text.in_(["/admin", "‚¨ÖÔ∏è –ù–∞ –≥–æ–ª–æ–≤–Ω—É"]))
async def main(message: Message):
    await message.answer("–¢–∏ –∞–¥–º—ñ–Ω!",
                         reply_markup=admin_main_kb)


# @admin_router.message(F.text == 'üîë –°—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤–∏–π –ø—Ä–æ–º–æ–∫–æ–¥')
# async def create_promo(message: Message):
#     new_cod = generate_new_code()
#     await message.reply(f'–í–∏ —Å—Ç–≤–æ—Ä–∏–ª–∏ –Ω–æ–≤–∏–π –ø—Ä–æ–º–æ–∫–æ–¥ - `{new_cod}`',
#                         reply_markup=admin_main_kb,
#                         parse_mode="MARKDOWN")


@admin_router.message(F.text == 'üõç –¢–æ–≤–∞—Ä–∏')
async def create_promo(message: Message):
    await message.reply(f'–†–æ–∑–¥—ñ–ª: –¢–æ–≤–∞—Ä–∏', reply_markup=admin_goods_kb, parse_mode="MARKDOWN")


@admin_router.message(F.text == "‚úèÔ∏è –î–æ–¥–∞—Ç–∏")
async def add_goods(message: Message, state: FSMContext):
    await message.answer("–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É —Ç–æ–≤–∞—Ä—É", reply_markup=admin_cancel_btn)
    await state.set_state(GoodsState.name)


# @admin_router.message(F.text == "üî® –û–Ω–æ–≤–∏—Ç–∏")
# async def add_goods(message: Message, state: FSMContext):
#     await message.answer("–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É —Ç–æ–≤–∞—Ä—É", reply_markup=admin_cancel_btn)
#     await state.set_state(UpdateAddr.field)


@admin_router.message(F.text == "üîë –°—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤–∏–π –ø—Ä–æ–º–æ–∫–æ–¥")
async def new_code(message: Message, state: FSMContext):
    await state.set_state(PromoCodeState.max_use)
    await message.answer("–í–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ, —Å–∫—ñ–ª—å–∫–∏ —Ä–∞–∑—ñ–≤ –º–æ–∂–Ω–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ —Ü–µ–π –ø—Ä–æ–º–æ–∫–æ–¥",
                         reply_markup=ReplyKeyboardRemove())


@admin_router.callback_query(Text(startswith="order_waiting"))
async def get_new_order(callback: CallbackQuery):
    _, action = callback.data.split("|")
    pattern = r"Id - (\d+)"
    match = re.search(pattern, callback.message.text)
    user_id = match.group(1)
    order_id = re.search("‚Ññ (\d+)", callback.message.text).group(1)

    if action == "confirm":
        msg = "‚úÖ –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω–æ"
        ans = "‚úÖ –í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ!\n"
        update_order_status(order_id, "confirmed")

    else:
        ans = "‚ùå –í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –±—É–ª–æ –≤—ñ–¥—Ö–∏–ª–µ–Ω–æ\n" \
              "–Ø–∫—â–æ —É –≤–∞—Å –∑–∞–ª–∏—à–∏–ª–∏—Å—è –ø–∏—Ç–∞–Ω–Ω—è" \
              " –≤–∏ –º–æ–∂–µ—Ç–µ –∑–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –Ω–∞—à–æ—ó –ø—ñ–¥—Ç—Ä–∏–º–∫—É."
        msg = "‚ùå –í—ñ–¥—Ö–∏–ª–µ–Ω–æ"
        update_order_status(order_id, "canceled")


    await callback.message.edit_text(msg)
    await bot.send_message(user_id, ans)
    await callback.answer()


# @admin_router.callback_query(Text(text="cancel"))
# async def get_new_order(query: CallbackQuery):
#     msg = f"{query.message.text}\n‚ùå –í—ñ–¥—Ö–∏–ª–µ–Ω–æ"
#     user_id = query.message.text.split(" ")[1]
#     await query.message.edit_text(msg)
#
#     await bot.send_message(user_id, t)
#     await query.answer()
